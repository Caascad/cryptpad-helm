{{- if .Values.workloadStateful }}
apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
{{- else }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "cryptpad-helm.fullname" . }}
  labels:
    {{- include "cryptpad-helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.workloadStateful }}
  serviceName: {{ include "cryptpad-helm.fullname" . }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cryptpad-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cryptpad-helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cryptpad-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: init-{{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['/bin/sh', '-c']
        volumeMounts:
          - name: cryptpad-data
            mountPath: /cryptpad/data
            {{- if .Values.persistence.cryptpad.data.existingClaim }}
              persistentVolumeClaim:
                claimName: {{ tpl .Values.persistence.cryptpad.data.existingClaim $ }}
            {{- end }}
        args:
        - |
          FILE=/cryptpad/data/decrees/decree.ndjson
          mkdir -p /cryptpad/data/decrees
          VALUE='["ENABLE_EMBEDDING", [{{ .Values.enableEmbedding }}], "", 0]'
          if  [ -f $FILE ] && [ $(grep -c "ENABLE_EMBEDDING" $FILE) -gt 0 ]
          then
            sed -i "s|.*ENABLE_EMBEDDING.*|$VALUE|g" "$FILE"
          else           
            echo "$VALUE" >> "$FILE"
          fi

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: CPAD_MAIN_DOMAIN       
            value: "{{ include "cryptpad-helm.mainDomain" . }}"
          - name: CPAD_SANDBOX_DOMAIN
            value: "{{ include "cryptpad-helm.sandboxDomain" . }}"
          - name: CPAD_CONF
            value: "{{ .Values.cpadConfig }}"
          {{- if .Values.apiDomain }}
          - name: CPAD_API_DOMAIN
            value:  "{{ .Values.apiDomain }}"
          {{- end }}
          {{- if .Values.filesDomain }}
          - name: CPAD_FILES_DOMAIN
            value:  "{{ .Values.filesDomain }}"
          {{- end }}
          {{- if .Values.trustedProxy }}
          - name: CPAD_TRUSTED_PROXY
            value:  "{{ .Values.trustedProxy }}"
          {{- end }}
          {{- if .Values.realIpHeader }}
          - name: CPAD_REALIP_HEADER
            value:  "{{ .Values.realIpHeader }}"
          {{- end }}
          {{- if .Values.realIpRecursive }}
          - name: CPAD_REALIP_RECURSIVE
            value: "{{ .Values.realIpRecursive }}"
          {{- end }}
          {{- if .Values.tlsCert }}
          - name: CPAD_TLS_CERT
            value:  "{{ .Values.tlsCert }}"
          {{- end }}
          {{- if .Values.tlsKey }}
          - name: CPAD_TLS_KEY
            value:  "{{ .Values.tlsKey }}"
          {{- end }}
          {{- if .Values.tlsDhParam }}
          - name: CPAD_TLS_DHPARAM
            value:  "{{ .Values.tlsDhParam }}"
          {{- end }}
          {{- if .Values.http2Disable }}
          - name: CPAD_HTTP2_DISABLE
            value:  "{{ .Values.http2Disable }}"
          {{- end }}
          ports:
            - name: {{ .Values.service.internalPort }}
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
            - name: {{ .Values.service.websocket.internalPort }}
              containerPort: {{ .Values.service.websocket.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if .Values.persistence.enabled }}
          {{- range $dir, $dirvalues := .Values.persistence.cryptpad }}
          - name: cryptpad-{{ $dir }}
            mountPath: /cryptpad/{{ $dir }}
            {{- if $dirvalues.existingClaim }}
              persistentVolumeClaim:
                claimName: {{ tpl $dirvalues.existingClaim $ }}
            {{- end }}
          {{- end }}
          {{- end }}
          - name: configmaps
            mountPath: {{ .Values.cpadConfig }}
            subPath: config.js
          - name: configmaps
            mountPath: /cryptpad/customize/application_config.js
            subPath: application_config.js
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: configmaps
        configMap:
          name: {{ include "cryptpad-helm.fullname" . }}
{{- if and .Values.persistence.enabled .Values.workloadStateful}}
      {{- range $dir, $dirvalues := .Values.persistence.cryptpad }}
      {{- if $dirvalues.existingClaim }}
      - name: cryptpad-{{ $dir }}
          persistentVolumeClaim:
            claimName: cryptpad-{{ $dir }}
      {{- end }}
      {{- end }}
  volumeClaimTemplates:
    {{- range $dir, $dirvalues := .Values.persistence.cryptpad }}
    {{- if not $dirvalues.existingClaim }}
    - metadata:
        name: cryptpad-{{ $dir }}
        {{- with $dirvalues.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $dirvalues.labels }}
        labels:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range $dirvalues.accessModes }}
          - {{ . | quote }}
        {{- end }}
        {{- if $dirvalues.storageClass }}
        storageClassName:  {{ $dirvalues.storageClass | quote }}
        {{- end }}
        {{- with $dirvalues.dataSource }}
        dataSource: 
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          requests:
            storage: {{ $dirvalues.size | quote }}
        {{- with $dirvalues.selector }}
        selector: 
          {{- toYaml . | nindent 10 }}
        {{- end }}
    {{- end }}
    {{- end }}
{{- end }}
{{- if and .Values.persistence.enabled (not .Values.workloadStateful) }}
  {{- range $dir, $dirvalues := .Values.persistence.cryptpad }}
      - name: cryptpad-{{ $dir }}
        persistentVolumeClaim:
          claimName: cryptpad-{{ $dir }}
  {{- end }}
{{- end }}
