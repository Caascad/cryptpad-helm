apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cryptpad-helm.fullname" . }}
  labels:
    {{- include "cryptpad-helm.labels" . | nindent 4 }}
data:
  config.js: |
    /* globals module */

    module.exports = {
            {{- if .Values.ingress.enabled }}
            httpUnsafeOrigin: 'https://{{ (index .Values.ingress.hosts 0).host }}',
            httpSafeOrigin: 'https://{{ (index .Values.ingress.hosts 0).host }}',
            {{- else }}
            httpUnsafeOrigin: 'http://localhost:3000',
            httpSafeOrigin: 'http://localhost:3000',
            {{- end }}
       
            httpAddress: '0.0.0.0',

        /*  CryptPad will launch a child process for every core available
        *  in order to perform CPU-intensive tasks in parallel.
        *  Some host environments may have a very large number of cores available
        *  or you may want to limit how much computing power CryptPad can take.
        *  If so, set 'maxWorkers' to a positive integer.
        */
            // maxWorkers: 4,
        
            /* =====================
            *         Admin
            * ===================== */
        
            /*
            *  CryptPad contains an administration panel. Its access is restricted to specific
            *  users using the following list.
            *  To give access to the admin panel to a user account, just add their public signing
            *  key, which can be found on the settings page for registered users.
            *  Entries should be strings separated by a comma.
            *  adminKeys: [
            *      "[cryptpad-user1@my.awesome.website/YZgXQxKR0Rcb6r6CmxHPdAGLVludrAF2lEnkbx1vVOo=]",
            *      "[cryptpad-user2@my.awesome.website/jA-9c5iNuG7SyxzGCjwJXVnk5NPfAOO8fQuQ0dC83RE=]",
            *  ]
            *
            */
            adminKeys: [
        
            ],
        
            /* =====================
            *        STORAGE
            * ===================== */
        
            /*  Pads that are not 'pinned' by any registered user can be set to expire
            *  after a configurable number of days of inactivity (default 90 days).
            *  The value can be changed or set to false to remove expiration.
            *  Expired pads can then be removed using a cron job calling the
            *  `evict-inactive.js` script with node
            *
            *  defaults to 90 days if nothing is provided
            */
            //inactiveTime: 90, // days
        
            /*  CryptPad archives some data instead of deleting it outright.
            *  This archived data still takes up space and so you'll probably still want to
            *  remove these files after a brief period.
            *
            *  cryptpad/scripts/evict-inactive.js is intended to be run daily
            *  from a crontab or similar scheduling service.
            *
            *  The intent with this feature is to provide a safety net in case of accidental
            *  deletion. Set this value to the number of days you'd like to retain
            *  archived data before it's removed permanently.
            *
            *  defaults to 15 days if nothing is provided
            */
            //archiveRetentionTime: 15,
        
            /*  It's possible to configure your instance to remove data
            *  stored on behalf of inactive accounts. Set 'accountRetentionTime'
            *  to the number of days an account can remain idle before its
            *  documents and other account data is removed.
            *
            *  Leave this value commented out to preserve all data stored
            *  by user accounts regardless of inactivity.
            */
            //accountRetentionTime: 365,
        
            /*  Starting with CryptPad 3.23.0, the server automatically runs
            *  the script responsible for removing inactive data according to
            *  your configured definition of inactivity. Set this value to `true`
            *  if you prefer not to remove inactive data, or if you prefer to
            *  do so manually using `scripts/evict-inactive.js`.
            */
            //disableIntegratedEviction: true,
        
        
            /*  Max Upload Size (bytes)
            *  this sets the maximum size of any one file uploaded to the server.
            *  anything larger than this size will be rejected
            *  defaults to 20MB if no value is provided
            */
            //maxUploadSize: 20 * 1024 * 1024,
        
            /*  Users with premium accounts (those with a plan included in their customLimit)
            *  can benefit from an increased upload size limit. By default they are restricted to the same
            *  upload size as any other registered user.
            *
            */
            //premiumUploadSize: 100 * 1024 * 1024,
        
            /* =====================
            *   DATABASE VOLUMES
            * ===================== */
        
            /*
            *  CryptPad stores each document in an individual file on your hard drive.
            *  Specify a directory where files should be stored.
            *  It will be created automatically if it does not already exist.
            */
            filePath: './datastore/',
        
            /*  CryptPad offers the ability to archive data for a configurable period
            *  before deleting it, allowing a means of recovering data in the event
            *  that it was deleted accidentally.
            *
            *  To set the location of this archive directory to a custom value, change
            *  the path below:
            */
            archivePath: './data/archive',
        
            /*  CryptPad allows logged in users to request that particular documents be
            *  stored by the server indefinitely. This is called 'pinning'.
            *  Pin requests are stored in a pin-store. The location of this store is
            *  defined here.
            */
            pinPath: './data/pins',
        
            /*  if you would like the list of scheduled tasks to be stored in
                a custom location, change the path below:
            */
            taskPath: './data/tasks',
        
            /*  if you would like users' authenticated blocks to be stored in
                a custom location, change the path below:
            */
            blockPath: './block',
        
            /*  CryptPad allows logged in users to upload encrypted files. Files/blobs
            *  are stored in a 'blob-store'. Set its location here.
            */
            blobPath: './blob',
        
            /*  CryptPad stores incomplete blobs in a 'staging' area until they are
            *  fully uploaded. Set its location here.
            */
            blobStagingPath: './data/blobstage',
        
            decreePath: './data/decrees',
        
            /* CryptPad supports logging events directly to the disk in a 'logs' directory
            * Set its location here, or set it to false (or nothing) if you'd rather not log
            */
            logPath: './data/logs',
        
            /* =====================
            *       Debugging
            * ===================== */
        
            /*  CryptPad can log activity to stdout
            *  This may be useful for debugging
            */
            logToStdout: false,
        
            /* CryptPad can be configured to log more or less
            * the various settings are listed below by order of importance
            *
            * silly, verbose, debug, feedback, info, warn, error
            *
            * Choose the least important level of logging you wish to see.
            * For example, a 'silly' logLevel will display everything,
            * while 'info' will display 'info', 'warn', and 'error' logs
            *
            * This will affect both logging to the console and the disk.
            */
            logLevel: 'info',
        
            /*  clients can use the /settings/ app to opt out of usage feedback
            *  which informs the server of things like how much each app is being
            *  used, and whether certain clientside features are supported by
            *  the client's browser. The intent is to provide feedback to the admin
            *  such that the service can be improved. Enable this with `true`
            *  and ignore feedback with `false` or by commenting the attribute
            *
            *  You will need to set your logLevel to include 'feedback'. Set this
            *  to false if you'd like to exclude feedback from your logs.
            */
            logFeedback: false,
        
            /*  CryptPad supports verbose logging
            *  (false by default)
            */
            verbose: false,
        
            /*  Surplus information:
            *
            *  'installMethod' is included in server telemetry to voluntarily
            *  indicate how many instances are using unofficial installation methods
            *  such as Docker.
            *
            */
            installMethod: 'helm-docker',
        };